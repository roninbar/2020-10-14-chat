{"version":3,"sources":["features/chat/socket.js","features/chat/chatSlice.js","components/MessageCard.js","components/MessageList.js","components/Chat/Chat.js","components/Sidebar/SidebarChat.js","components/Sidebar/Sidebar.js","features/user/userSlice.js","components/MainPage.js","components/PrivateRoute.js","components/SignInPage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["socket","io","on","debug","message","sendMessageAsync","createAsyncThunk","a","emit","chatSlice","createSlice","name","initialState","messages","reducers","truncateMessages","state","length","sendMessage","payload","time","sender","text","push","status","receiveMessage","extraReducers","pending","meta","id","requestId","arg","actions","useStyles","makeStyles","theme","card","margin","spacing","backgroundColor","props","MessageCard","children","other","classes","Card","className","cardContent","display","flexFlow","alignSelf","color","MessageList","Grid","item","component","container","direction","wrap","map","justify","key","xs","CardContent","Typography","variant","mapDispatchToProps","withRedux","connect","username","user","chat","useState","input","setInput","useEffect","messagesEndRef","current","scrollIntoView","useRef","Avatar","src","IconButton","SearchOutlined","MoreVert","ref","InsertEmoticon","AttachFile","onSubmit","e","preventDefault","now","Date","toLocaleTimeString","type","value","onChange","target","placeholder","Mic","SidebarChat","typing","onClick","onSideBarClicked","picture","undefined","lastMessage","Sidebar","onLogOut","React","open","setOpen","anchorRef","handleClose","event","contains","handleLogOut","getChatMessages","handleListKeyDown","groups","sampleData","group","index","prevOpen","focus","title","aria-controls","aria-haspopup","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","logInAsync","password","firstName","lastName","requestJsonUsingForm","statusText","Error","logOutAsync","request","headers","localStorage","getItem","userSlice","error","first","last","setUser","fulfilled","token","setItem","decode","rejected","method","url","options","fetch","fields","body","URLSearchParams","Object","entries","requestJson","response","json","MainPage","connectToRedux","history","chatData","setChatData","goBack","sideBarData","Component","rest","render","to","paper","marginTop","flexDirection","alignItems","avatar","palette","secondary","main","form","width","submit","useHistory","setUsername","setPassword","Container","maxWidth","CssBaseline","noValidate","TextField","required","fullWidth","autoComplete","autoFocus","label","FormControlLabel","control","Checkbox","Button","Link","href","Snackbar","Boolean","Alert","severity","elevation","App","exact","path","SignInPage","configureStore","reducer","chatReducer","userReducer","window","location","hostname","match","store","dispatch","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c0521cf.chunk.js","sourcesContent":["import io from 'socket.io-client';\r\nimport debug from 'debug';\r\n\r\nconst socket = io();\r\n\r\nsocket.on('connect', function() {\r\n    debug('chat:socket')('Connected.');\r\n});\r\n\r\nsocket.on('disconnect', function() {\r\n    debug('chat:socket')('Disconnected.');\r\n})\r\n\r\nsocket.on('chat', function (message) {\r\n    debug('chat:socket')('Received message:', message);\r\n});\r\n\r\nexport default socket;\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport socket from './socket';\r\n\r\nexport const loadAllMessagesAsync = createAsyncThunk(\r\n    'chat/loadAllMessages',\r\n    async function () {\r\n\r\n    },\r\n);\r\n\r\nexport const sendMessageAsync = createAsyncThunk(\r\n    'chat/sendMessage',\r\n    function (message) {\r\n        socket.emit('chat', message);\r\n    },\r\n);\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState: {\r\n        messages: [],\r\n    },\r\n    reducers: {\r\n        truncateMessages(state) {\r\n            state.messages.length = 0;\r\n        },\r\n        sendMessage(state, { payload: { time, sender, text } }) {\r\n            state.messages.push({ time, sender, text, status: 'sent' });\r\n        },\r\n        receiveMessage(state, { payload: { time, sender, text } }) {\r\n            state.messages.push({ time, sender, text, status: 'received' }); \r\n        },\r\n    },\r\n    extraReducers: {\r\n        [sendMessageAsync.pending](state, { meta: { requestId: id, arg } }) {\r\n            state.messages.push({ id, ...arg, status: 'pending' });\r\n        },\r\n    },\r\n});\r\n\r\nexport const { truncateMessages, sendMessage, receiveMessage } = chatSlice.actions;\r\n\r\nexport default chatSlice.reducer;\r\n\r\n","import { Card, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(function (theme) {\r\n    return {\r\n        card: {\r\n            margin: theme.spacing(1),\r\n            backgroundColor: function (props) {\r\n                return props.status === 'received' ? 'white' : '#dcf8c6';\r\n            },\r\n        },\r\n    };\r\n});\r\n\r\nexport default function MessageCard(props) {\r\n    const { children, ...other } = props;\r\n    const classes = useStyles(props);\r\n    return <Card {...other} className={classes.card}>{children}</Card>;\r\n}\r\n\r\nMessageCard.propTypes = {\r\n    status: PropTypes.string.isRequired,\r\n};\r\n\r\n","import { CardContent, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport MessageCard from './MessageCard';\r\n\r\nconst useStyles = makeStyles(function (theme) {\r\n    return {\r\n        cardContent: {\r\n            display: 'flex',\r\n            flexFlow: 'column nowrap',\r\n        },\r\n        sender: {\r\n            alignSelf: 'flex-start',\r\n            color: '#aaa',\r\n        },\r\n        time: {\r\n            alignSelf: 'flex-end',\r\n            color: '#aaa',\r\n        },\r\n    };\r\n});\r\n\r\nexport default function MessageList({ messages }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item component=\"main\" container direction=\"column\" wrap=\"nowrap\">\r\n            {messages.map(({ id, sender, time, text, status }) => (\r\n                <Grid\r\n                    item\r\n                    container\r\n                    direction=\"row\"\r\n                    justify={status === 'pending' || status === 'sent' ? 'flex-start' : 'flex-end'}\r\n                    key={id}\r\n                >\r\n                    <Grid item xs={8}>\r\n                        <MessageCard sender={sender} status={status}>\r\n                            <CardContent className={classes.cardContent}>\r\n                                {status === 'received' && (\r\n                                    <Typography variant=\"caption\" className={classes.sender}>{sender}</Typography>\r\n                                )}\r\n                                <Typography variant=\"body1\">{text}</Typography>\r\n                                <Typography variant=\"caption\" className={classes.time}>{time}</Typography>\r\n                            </CardContent>\r\n                        </MessageCard>\r\n                    </Grid>\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n\r\n}\r\n\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, Mic, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MessageList from 'components/MessageList';\r\nimport { sendMessageAsync } from 'features/chat/chatSlice';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Chat.css';\r\n\r\nconst LOCALE = 'he-IL';\r\n\r\nfunction Chat({ username, messages, sendMessageAsync }) {\r\n\r\n    function onSubmitMessage(e) {\r\n        e.preventDefault();\r\n        const now = new Date();\r\n        sendMessageAsync({\r\n            time: now.toLocaleTimeString(LOCALE),\r\n            sender: username,\r\n            text: input,\r\n        });\r\n        setInput('');\r\n    }\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    useEffect(function () {\r\n        if (messagesEndRef.current) {\r\n            messagesEndRef.current.scrollIntoView();\r\n        }\r\n    }, [messages]);\r\n\r\n    const messagesEndRef = useRef(null);\r\n\r\n    let groupData;\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={groupData?.picture ?? null} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{groupData?.name ?? 'Room name'}</h3>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                <MessageList messages={messages}/>\r\n                <div ref={messagesEndRef} />\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <IconButton>\r\n                    <InsertEmoticon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <AttachFile />\r\n                </IconButton>\r\n                <form onSubmit={onSubmitMessage}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={({ target: { value } }) => setInput(value)}\r\n                        placeholder=\"Type a message\"\r\n                    />\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n                <IconButton>\r\n                    <Mic />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ user: { name: username }, chat: { messages } }) => ({ username, messages });\r\n\r\nconst mapDispatchToProps = { sendMessageAsync };\r\n\r\nconst withRedux = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withRedux(Chat);\r\n\r\n","import { Avatar } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './SidebarChat.css';\r\n\r\nfunction SidebarChat(props) {\r\n\r\n    function handleChatClick() {\r\n        props.onSideBarClicked(props);\r\n    }\r\n\r\n    let typing;\r\n    if (props.typing) {\r\n        typing = <div className=\"sidebarChat__typing\">Typing...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"sidebarChat\" onClick={handleChatClick}>\r\n            <Avatar src={props.picture ?? undefined} />\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{props.name ?? 'Room Name'}</h2>\r\n                <p>{props.lastMessage ?? 'Room Name'}</p>\r\n                {typing}\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\nSidebarChat.propTypes = {\r\n    onSideBarClicked: PropTypes.func,\r\n    picture: PropTypes.string,\r\n    name: PropTypes.string,\r\n    lastMessage: PropTypes.string,\r\n    typing: PropTypes.bool,\r\n};\r\n\r\nexport default SidebarChat;\r\n","import { Avatar, IconButton } from '@material-ui/core';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport sampleData from './sampleData/data.json';\r\nimport SidebarChat from './SidebarChat';\r\nimport './Sidebar.css';\r\n\r\nfunction Sidebar({ onSideBarClicked, onLogOut }) {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const anchorRef = React.useRef(null);\r\n\r\n    function handleToggle() {\r\n        setOpen(prevOpen => !prevOpen);\r\n    }\r\n\r\n    function handleClose(event) {\r\n        if (!anchorRef.current?.contains(event.target)) {\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    function handleLogOut(event) {\r\n        handleClose(event);\r\n        onLogOut();\r\n    }\r\n\r\n    function getChatMessages(event) {\r\n        onSideBarClicked(event);\r\n    }\r\n\r\n    function handleListKeyDown(event) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n\r\n    const groups = sampleData.map((group, index) => (\r\n        <SidebarChat id={group.id} key={index}\r\n            typing={group.typing}\r\n            picture={group.picture}\r\n            name={group.name}\r\n            lastMessage={group.lastMessage}\r\n            onSideBarClicked={getChatMessages}\r\n        />\r\n    ));\r\n\r\n    const prevOpen = React.useRef(open);\r\n\r\n    React.useEffect(function () {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current.focus();\r\n        }\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src=\"Assets/me.png\" />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton title=\"Status\">\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton title=\"New Chat\">\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        title=\"Menu\"\r\n                        ref={anchorRef}\r\n                        aria-controls={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleToggle}\r\n                    >\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                    <Popper\r\n                        open={open}\r\n                        anchorEl={anchorRef.current}\r\n                        role={undefined}\r\n                        transition\r\n                        disablePortal\r\n                    >\r\n                        {function ({ TransitionProps, placement }) {\r\n                            return (\r\n                                <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{\r\n                                        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\r\n                                    }}\r\n                                >\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList\r\n                                                autoFocusItem={open}\r\n                                                id=\"menu-list-grow\"\r\n                                                onKeyDown={handleListKeyDown}\r\n                                            >\r\n                                                <MenuItem onClick={handleClose}>New Group</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Create a Room</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Archived</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Starred</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Setting</MenuItem>\r\n                                                <MenuItem onClick={handleLogOut}>Log Out</MenuItem>\r\n                                            </MenuList>\r\n                                        </ClickAwayListener>\r\n                                    </Paper>\r\n                                </Grow>\r\n                            );\r\n                        }}\r\n                    </Popper>\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input type=\"text\" placeholder=\"Search or start new chat\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar__chats\">\r\n                {groups}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSidebar.propTypes = {\r\n    onSideBarClicked: PropTypes.func,\r\n};\r\n\r\nexport default Sidebar;\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { decode } from 'jsonwebtoken';\r\n\r\nexport const signUpAsync = createAsyncThunk(\r\n    'user/signup',\r\n    async function ({ username, password, firstName, lastName }) {\r\n        const { status, statusText } = await requestJsonUsingForm('POST', '/api/user', { firstName, lastName, username, password });\r\n        if (200 <= status && status < 300) {\r\n            return { status, statusText };\r\n        } else {\r\n            throw new Error(`${status} ${statusText}`);\r\n        }\r\n    },\r\n);\r\n\r\nexport const logInAsync = createAsyncThunk(\r\n    'user/login',\r\n    async function ({ username, password }) {\r\n        return requestJsonUsingForm('POST', '/api/auth/login', { username, password });\r\n    },\r\n);\r\n\r\nexport const logOutAsync = createAsyncThunk(\r\n    'user/logout',\r\n    async function () {\r\n        const { status, statusText } = await request('POST', '/api/auth/logout', { \r\n            headers: {\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n        });\r\n        if (200 <= status && status < 300) {\r\n            return statusText;\r\n        } else {\r\n            throw new Error(`${status} ${statusText}`);\r\n        }\r\n    },\r\n);\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        pending: false,\r\n        error: false,\r\n        name: { first: '', last: '' },\r\n    },\r\n    reducers: {\r\n        setUser(state, { payload: username }) {\r\n            state.name = username;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [logInAsync.pending](state) {\r\n            state.pending = true;\r\n            state.name.first = state.name.last = '';\r\n        },\r\n        [logInAsync.fulfilled](state, { payload: { token } }) {\r\n            state.pending = false;\r\n            state.error = false;\r\n            localStorage.setItem('token', token);\r\n            const { name } = decode(token);\r\n            state.name = name;\r\n        },\r\n        [logInAsync.rejected](state, { error }) {\r\n            state.pending = false;\r\n            state.error = error;\r\n        },\r\n        [logOutAsync.pending](state) {\r\n            state.pending = true;\r\n        },\r\n        [logOutAsync.fulfilled](state, { payload }) {\r\n            state.pending = false;\r\n            state.error = false;\r\n            state.name.first = state.name.last = '';\r\n        },\r\n        [logOutAsync.rejected](state, { error }) {\r\n            state.pending = false;\r\n            state.error = error;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\n/**\r\n * \r\n * @param {string} method The HTTP method to use.\r\n * @param {string} url The URL to send the request to.\r\n * @param {object} options An options object to pass to 'fetch'. The method option, if present, will be ignored.\r\n */\r\nasync function request(method, url, options = {}) {\r\n    return await fetch(url, { ...options, method });\r\n}\r\n\r\n/**\r\n * Send a request containing form data, expecting a JSON response.\r\n * @param {string} method The HTTP method to use.\r\n * @param {string} url \r\n * @param {object} fields An object whose properties represent the fields of the form.\r\n */\r\nasync function requestJsonUsingForm(method, url, fields) {\r\n    const body = new URLSearchParams(Object.entries(fields));\r\n    return await requestJson(method, url, { body });\r\n}\r\n\r\n/**\r\n * Send an HTTP request that expects a JSON response.\r\n * @param {string} method \r\n * @param {string} url \r\n * @param {object} options \r\n */\r\nexport async function requestJson(method, url, options = {}) {\r\n    const response = await fetch(url, { method, ...options });\r\n    const { status, statusText } = response;\r\n    if (200 <= status && status < 300) {\r\n        return await response.json();\r\n    }\r\n    else {\r\n        throw new Error(`${status} ${statusText}`);\r\n    }\r\n}\r\n\r\n","import Chat from 'components/Chat/Chat';\r\nimport Sidebar from 'components/Sidebar/Sidebar';\r\nimport { logOutAsync } from 'features/user/userSlice';\r\nimport React, { useState } from 'react';\r\nimport { connect as connectToRedux } from 'react-redux';\r\n\r\nconst MainPage = connectToRedux(null, { logOutAsync })(function ({ logOutAsync, history }) {\r\n\r\n    const [chatData, setChatData] = useState({});\r\n\r\n    async function onLogOut() {\r\n        await logOutAsync();\r\n        history.goBack();\r\n    }\r\n\r\n    function handleChatClick(sideBarData) {\r\n        if (sideBarData?.id) {\r\n            setChatData(sideBarData);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app__body\">\r\n                <Sidebar onSideBarClicked={handleChatClick} onLogOut={onLogOut} />\r\n                <Chat chatData={chatData} />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n// https://medium.com/better-programming/building-basic-react-authentication-e20a574d5e71\r\n\r\nfunction PrivateRoute({ username, component: Component, ...rest }) {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                props => username\r\n                    ? (\r\n                        <Component {...props} />\r\n                    )\r\n                    : (\r\n                        <Redirect to=\"/login\" />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n\r\n}\r\n\r\nconst withRedux = connect(({ user: { name: username } }) => ({ username }), null);\r\n\r\nexport default withRedux(PrivateRoute);","import { Snackbar } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { logInAsync } from 'features/user/userSlice';\r\nimport React, { useState } from 'react';\r\nimport { connect as connectToRedux } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default connectToRedux(({ user: { error } }) => ({ error }), { logInAsync })(function ({ error, logInAsync }) {\r\n\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n        const { error } = await logInAsync({ username, password });\r\n        if (!error) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    function onChangeUsername({ target: { value } }) {\r\n        setUsername(value);\r\n    }\r\n\r\n    function onChangePassword({ target: { value } }) {\r\n        setPassword(value);\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form onSubmit={onSubmit} className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        label=\"Username\"\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        value={username}\r\n                        onChange={onChangeUsername}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        autoComplete=\"current-password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            {/* <Box mt={8}>\r\n                <Copyright />\r\n            </Box> */}\r\n            <Snackbar open={Boolean(error)}>\r\n                <Alert variant=\"filled\" severity=\"error\" elevation={6}>{error?.message}</Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    );\r\n\r\n});\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport MainPage from 'components/MainPage';\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport SignInPage from 'components/SignInPage';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/login\" component={SignInPage} />\r\n                <PrivateRoute exact path=\"/\" component={MainPage} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport chatReducer from '../features/chat/chatSlice';\r\nimport userReducer from '../features/user/userSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        chat: chatReducer,\r\n        user: userReducer,\r\n    },\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import './index.css';\r\nimport { receiveMessage } from 'features/chat/chatSlice';\r\nimport socket from 'features/chat/socket';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nsocket.on('chat', function (message) {\r\n  store.dispatch(receiveMessage(message));\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}